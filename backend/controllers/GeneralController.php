<?phpnamespace backend\controllers;use Yii;use yii\web\ForbiddenHttpException;class GeneralController extends BackendController{    public function behaviors()    {        return [            'access' => [                'class' => \yii\filters\AccessControl::className(),                'rules' => [                    [                        'allow' => true,                        'roles' => ['admin'],                    ],                ],            ],            'verbs' => [                'class' => \yii\filters\VerbFilter::className(),                'actions' => [                    'delete-model' => ['post'],                    'bulk-delete-models' => ['post'],                ],            ],        ];    }    /**     * Delete single model     */    public function actionDeleteModel($modelClass, $id='', $returnUrl = null){        $model = $modelClass::findModel($id);        if ($model->getIsDeletable()) {            if ($model->softDelete){                $model->deleted = true;                $model->save();            }            else{                $model->delete();            }        }else{            $message = $model->deleteErrorMessage ?? Yii::t('app',"You cannot delete this item!!!");            throw new ForbiddenHttpException($message);        }        if($this->isAjax){            Yii::$app->response->format = 'json';            return ['forceClose'=>true,'forceReload'=>'#crud-datatable-pjax'];        }else{            $returnUrl = $returnUrl ?? $this->request->referrer;            return $this->redirect($returnUrl);        }    }     /**     * Bulk Delete selected models    */    public function actionBulkDeleteModels($modelClass, $returnUrl = null){        $pks = explode(',', request()->post( 'pks' ));        foreach ( $pks as $pk ) {            $model = $modelClass::findModel($pk);            if ($model->isDeletable) {                $model->delete();            }        }        if(request()->isAjax){            Yii::$app->response->format = 'json';            return ['forceClose'=>true,'forceReload'=>'#crud-datatable-pjax'];        }else{           $returnUrl = $returnUrl ?? request()->referrer;           return $this->redirect($returnUrl);       }    }}