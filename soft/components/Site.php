<?phpnamespace soft\components;use common\components\virtualdars\VideojsWidget;use frontend\modules\profile\controllers\StartController;use Yii;use yii\base\Model;/** * * @property-read string $keywords * @property-read string $favicon * @property-read string $virtualdarsImage * @property-read string $description * @property-read string[] $kursLanguages * @property-read void $updateWatchInterval * @property-read string[] $kursProviders * @property-read mixed $clearedTel * @property-read array $kursFreeDurations * @property-read string[] $kursDurations * @property-read string[] $kursLevels * @property-read string $logo * @property-read int $percentForCompleteLesson * @property-read string $userDefaultAvatar * @property-read string $email */class Site extends Model{    public $defaultLanguage = 'uz';    public $languageParam = 'language';    //<editor-fold desc="Site data" defaultstate="collapsed">    /*public function getValue($url = ''){        $model = Field::find()->where(['url' => $url])->one();        if($model == NULL){            return '';        }        else{            return $model->value;        }    }*/    public function getClearedTel()    {        return Yii::$app->help->clearPhoneNumber($this->tel);    }    /*public function getDescription()    {        return static::getValue('site_description');    }*/    /*public function getKeywords()    {        return static::getValue('site_keywords');    }*/    public function getLogo()    {        return "/images/logo.svg";    }    /*public function getEmail()    {        return static::getValue('email');    }*/    public function getFavicon()    {        $icon = settings('site', 'favicon');        return '<link rel="shortcut icon" href="' . $icon . '">';    }// </editor-fold>    //<editor-fold desc="Language" defaultstate="collapsed">    public function languages()    {        return [            'uz' => "O'zbek",            'ru' => "Русский",//            'en' => "English",        ];    }    public function setLanguage()    {        $lang = Yii::$app->request->get($this->languageParam, $this->defaultLanguage);        if (!array_key_exists($lang, $this->languages())) {            $lang = $this->defaultLanguage;        }        Yii::$app->language = $lang;    }// </editor-fold>    //<editor-fold desc="Settings" defaultstate="collapsed">    public function getKursLevels()    {        return [            'beginner' => "Boshlang'ich",            'intermediate' => "O'rta darajadagi",            'advanced' => "Yuqori darajadagi",        ];    }    public function getKursLanguages()    {        return [            'uz' => "O'zbek tilida",            'ru' => "Rus tilida",            'en' => "Ingliz tilida",        ];    }    public function getKursProviders()    {        return [            'youtube' => "Youtube",            'vimeo' => "Vimeo",            'html5' => "Html5",        ];    }    public function getKursDurations()    {        return [//            "+30 days" => "30 ".t('days'),//            "+45 days" => "45 ".t('days'),            "+2 months" => "2 " . t('months'),            "+3 months" => "3 " . t('months'),            "+6 months" => "6 " . t('months'),            "+9 months" => "9 " . t('months'),            "+1 year" => "1 " . t('year'),            "+2 year" => "2 " . t('years'),            "+3 year" => "3 " . t('years'),        ];    }    public function getKursFreeDurations()    {        return [            0 => t('No available'),            7 => "7 " . t('days'),            10 => "10 " . t('days'),            15 => "15 " . t('days'),            20 => "20 " . t('days'),            30 => "30 " . t('days'),        ];    }    public function getVirtualdarsImage()    {        return "/images/virtualdars_image.jpg";    }    /**     * User videoni ko'rayotganda shu interval (sekund) oraligida ma'lumotlar db ga yozilib turadi     * @return int     * @see VideojsWidget::initEvents()     * @see StartController::actionSaveWatch()     */    public function getUpdateWatchInterval()    {        return 10;    }    /**     * User tomonidan lessonni complete bo'lishi uchun videoning kamida necha foizi ko'rilishi kerakligi bildiradi     * @return int foiz     */    public function getPercentForCompleteLesson()    {        return 70;    }    public function getUserDefaultAvatar()    {        return "/images/no-user-image2.jpg";    }// </editor-fold>}