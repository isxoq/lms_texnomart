<?phpnamespace soft\helpers;use Yii;use yii\helpers\Html;class SHtml extends Html{    /**     * Generates a tag with icon if $icon is not null     * if $options[visible] == false return ""     */    public static function a($text, $url = null, $options = [], $icon = null)    {        $text = static::withIcon($text, $icon);        if (isset($options['visible'])) {            if (!$options['visible']) {                return "";            }            unset($options['visible']);        }        return parent::a($text, $url, $options);    }    /**     * Generates icon     */    public static function icon($icon = null)    {        if ($icon == null) {            return "";        }        $icon = explode(",", $icon);        if (count($icon) > 1) {            $iconClass = $icon[1];            switch ($iconClass){                case "gly" : $i = Html::tag('span', "", ['class' => 'glyphicon glyphicon-' . $icon[0]]); break;                case "fas" : $i = Html::tag('i', "", ['class' => 'fas fa-' . $icon[0]]); break;                case "far" : $i = Html::tag('i', "", ['class' => 'far fa-' . $icon[0]]); break;                case "fab" : $i = Html::tag('i', "", ['class' => 'fab fa-' . $icon[0]]); break;                case "feather" : $i = Html::tag('span', "", ['class' => 'feather icon-' . $icon[0]]); break;                default:  $i = Html::tag('i', "", ['class' => "{$iconClass} {$iconClass}-{$icon[0]}"] ); break;            }        }        else {            $i = Html::tag('i', "", ['class' => 'fa fa-' . $icon[0]]);        }        return $i;    }    /**     * Generates text with icon     */    public static function withIcon($text = null, $icon = null)    {        if ($icon == null) {            return $text;        }        return static::icon($icon) . " " . $text;    }    /**     * Generates badge     */    public static function badge($badgeText = null)    {        if ($badgeText === null) {            return "";        } else {            return parent::tag('span', $badgeText, ['class' => 'badge']);        }    }    /**     * Generates text with  badge     */    public static function withBadge($label = null, $badgeText = '')    {        $badge = static::badge($badgeText);        return $badge . " " . $label;    }    /**     * Generates back button     */    public static function back($url = null, $options = [], $icon = 'arrow-left')    {        if ($url == null) {            $url = Yii::$app->request->referrer;        }        SArray::setValueIfNoValid($options, 'class', 'btn btn-primary btn-sm');        return static::a("Ortga", $url, $options, $icon);    }    public static function submitButton($label = null, $options = [])    {        $visible = SArray::remove($options, 'visible', true);        if (!$visible){            return '';        }        $options['type'] = 'submit';        $label = $label == null ? "Saqlash" : $label;        SArray::setValueIfNoValid($options, 'class', 'btn btn-success');        return static::button($label, $options);    }    public static function createButton($label = null, $url = ['create'], $options = [])    {//        $label = $label == null ? Yii::t('app', 'Create new') : $label;        $label = $label ?? "Yangi qo'shish";        $label = static::withIcon($label, 'plus');        SArray::setValueIfNoValid($options, 'class', 'btn btn-success');        return static::a($label, $url, $options);    }    public static function updateButton($id = '', $url = ['update'], $options = [])    {        $label = SArray::remove($options, 'label',  Yii::t('app', 'Update'));        $label = static::withIcon($label, 'edit,gly');        $url['id'] = $id;        SArray::setValueIfNoValid($options, 'class', 'btn btn-primary');        return static::a($label, $url, $options);    }    public static function deleteButton($url, $options=[])    {        $label = SArray::remove($options, 'label',  Yii::t('app', 'Delete'));        $label = static::withIcon($label, 'trash,gly');        SArray::setValueIfNoValid($options, 'class', 'btn btn-danger');        SArray::setValueIfNoValid($options, 'data-confirm', Yii::t('app', 'Are you sure you want to delete this item?'));        SArray::setValueIfNoValid($options, 'data-method', 'post');        return static::a($label, $url, $options);    }    public static function deleteModelButton($model, $options=[])    {        $url = ['/general/delete-model', 'modelClass' => $model->className(), 'id' => $model->id];        return static::deleteButton($url, $options);    }}